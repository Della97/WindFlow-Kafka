[2022-05-31 20:03:32,249] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-31 20:03:37,810] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-31 20:03:37,862] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 32 and epoch zk version is now 32 (kafka.controller.KafkaController)
[2022-05-31 20:03:37,867] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-31 20:03:37,873] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-31 20:03:37,884] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-31 20:03:37,890] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-31 20:03:37,919] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 2815) (kafka.controller.KafkaController)
[2022-05-31 20:03:37,950] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-31 20:03:38,046] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-31 20:03:38,069] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-31 20:03:38,071] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2022-05-31 20:03:38,072] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-31 20:03:38,072] INFO [Controller id=2] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-31 20:03:38,073] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-31 20:03:38,085] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-31 20:03:38,086] INFO [Controller id=2] List of topics ineligible for deletion: output,input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-31 20:03:38,087] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-31 20:03:38,087] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-31 20:03:38,088] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-31 20:03:38,121] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-31 20:03:38,127] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-31 20:03:38,139] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-31 20:03:38,206] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-31 20:03:38,354] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=output,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=input,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-31 20:03:38,355] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-31 20:03:38,363] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-31 20:03:38,547] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-31 20:03:38,548] INFO [Controller id=2] Ready to serve as the new controller with epoch 32 (kafka.controller.KafkaController)
[2022-05-31 20:03:38,556] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-31 20:03:38,556] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-31 20:03:38,557] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-31 20:03:38,557] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-31 20:03:38,559] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-31 20:03:38,574] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-31 20:03:43,576] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:03:43,576] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:03:43,584] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-21 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-35 -> List(1), output-0 -> List(1), __consumer_offsets-47 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-33 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), input-0 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-5 -> List(1)) (kafka.controller.KafkaController)
[2022-05-31 20:03:43,588] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-31 20:03:43,592] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-31 20:03:43,593] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:03:43,593] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:03:45,787] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-31 20:03:45,787] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-31 20:03:45,794] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-31 20:03:45,796] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-31 20:03:45,814] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-31 20:03:45,917] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-31 20:03:45,920] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 2885, 2 -> 2815) (kafka.controller.KafkaController)
[2022-05-31 20:03:45,922] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-31 20:03:45,953] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-31 20:08:43,593] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:08:43,594] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:08:43,600] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:08:43,600] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:08:43,601] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:08:43,601] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:13:43,602] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:13:43,602] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:13:43,606] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:13:43,606] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:13:43,606] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:13:43,606] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:28:41,725] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:28:41,725] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:28:41,727] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:28:41,727] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:28:41,727] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:28:41,727] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:33:41,728] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:33:41,728] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:33:41,732] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:33:41,733] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:33:41,733] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:33:41,733] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:38:41,734] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:38:41,734] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:38:41,737] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:38:41,737] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:38:41,737] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:38:41,737] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:43:41,738] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-31 20:43:41,739] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-31 20:43:41,742] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:43:41,742] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-31 20:43:41,742] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-31 20:43:41,742] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)

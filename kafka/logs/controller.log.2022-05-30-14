[2022-05-30 15:00:15,187] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 15:00:15,261] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2022-05-30 15:00:15,266] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-30 15:00:15,280] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-30 15:00:15,320] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-30 15:00:15,333] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-30 15:00:15,374] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 652) (kafka.controller.KafkaController)
[2022-05-30 15:00:15,458] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-30 15:00:15,618] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-30 15:00:15,635] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2022-05-30 15:00:15,635] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-30 15:00:15,635] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-30 15:00:15,636] INFO [Controller id=2] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-30 15:00:15,636] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-30 15:00:15,649] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-30 15:00:15,650] INFO [Controller id=2] List of topics ineligible for deletion: output,input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-30 15:00:15,650] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-30 15:00:15,651] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-30 15:00:15,653] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-30 15:00:15,700] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 15:00:15,700] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 15:00:15,713] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 15:00:15,786] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 15:00:16,003] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=output,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=input,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 15:00:16,004] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 15:00:16,029] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 15:00:16,247] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 15:00:16,248] INFO [Controller id=2] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2022-05-30 15:00:16,264] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 15:00:16,265] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 15:00:16,266] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-30 15:00:16,267] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-30 15:00:16,268] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-30 15:00:16,285] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-30 15:00:17,544] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-30 15:00:17,544] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-30 15:00:17,553] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-30 15:00:17,553] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-30 15:00:17,564] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 15:00:17,674] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-30 15:00:17,682] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 697, 2 -> 652) (kafka.controller.KafkaController)
[2022-05-30 15:00:21,287] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:00:21,288] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:00:21,302] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:00:21,306] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:00:21,307] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:00:21,307] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:05:21,308] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:05:21,309] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:05:21,313] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:05:21,313] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:05:21,314] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:05:21,314] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:10:21,314] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:10:21,315] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:10:21,319] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:10:21,319] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:10:21,319] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:10:21,320] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:15:21,320] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:15:21,320] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:15:21,321] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:15:21,321] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:15:21,321] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:15:21,321] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:20:21,323] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:20:21,323] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:20:21,326] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:20:21,326] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:20:21,326] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:20:21,326] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:25:21,327] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:25:21,327] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:25:21,330] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:25:21,330] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:25:21,330] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:25:21,330] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:30:21,330] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:30:21,331] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:30:21,331] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:30:21,332] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:30:21,332] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:30:21,332] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:35:21,332] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:35:21,332] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:35:21,336] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:35:21,336] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:35:21,336] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:35:21,337] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:40:21,337] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:40:21,337] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:40:21,338] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:40:21,338] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:40:21,338] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:40:21,339] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:45:21,339] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:45:21,339] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:45:21,342] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:45:21,342] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:45:21,342] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:45:21,342] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:50:21,342] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:50:21,343] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:50:21,343] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:50:21,344] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:50:21,344] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:50:21,344] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:55:21,344] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 15:55:21,344] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 15:55:21,346] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:55:21,346] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 15:55:21,347] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 15:55:21,347] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)

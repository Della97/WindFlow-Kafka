[2022-05-01 15:30:50,905] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-01 15:31:18,679] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:31:18,844] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-05-01 15:31:18,855] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-01 15:31:18,883] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-01 15:31:18,900] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-01 15:31:18,915] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-01 15:31:19,028] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 205) (kafka.controller.KafkaController)
[2022-05-01 15:31:19,113] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-01 15:31:19,441] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-01 15:31:19,503] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2022-05-01 15:31:19,504] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-01 15:31:19,505] INFO [Controller id=2] Current list of topics in the cluster: HashSet(input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-01 15:31:19,505] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-01 15:31:19,506] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-01 15:31:19,514] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-01 15:31:19,514] INFO [Controller id=2] List of topics ineligible for deletion: input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-01 15:31:19,515] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-01 15:31:19,515] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-01 15:31:19,517] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-01 15:31:19,569] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:31:19,575] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-01 15:31:19,610] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:31:19,850] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:31:20,163] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=input,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:31:20,166] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:31:20,187] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:31:20,390] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:31:20,391] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-05-01 15:31:20,404] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-01 15:31:20,404] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-01 15:31:20,405] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-01 15:31:20,405] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-01 15:31:20,407] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-01 15:31:20,421] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-01 15:31:22,331] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-01 15:31:22,332] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-01 15:31:22,362] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-01 15:31:22,367] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-01 15:31:22,385] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-01 15:31:22,479] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:31:22,576] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-01 15:31:22,576] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-01 15:31:22,583] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 249, 2 -> 205) (kafka.controller.KafkaController)
[2022-05-01 15:31:25,424] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 15:31:25,425] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:31:25,432] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:31:25,435] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:31:25,435] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:31:25,435] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:33:44,517] INFO [Controller id=2] New topics: [Set(output)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output,Some(Kk5oMbJrT4ykXz69wVcZYg),Map(output-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-01 15:33:44,518] INFO [Controller id=2] New partition creation callback for output-0 (kafka.controller.KafkaController)
[2022-05-01 15:36:25,436] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 15:36:25,436] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:36:25,437] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:36:25,437] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:36:25,438] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:36:25,438] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:41:25,438] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 15:41:25,438] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:41:25,440] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:41:25,440] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:41:25,440] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:41:25,440] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:46:25,440] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 15:46:25,440] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 15:46:25,443] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:46:25,443] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:46:25,444] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 15:46:25,444] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 15:50:10,467] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-01 15:50:10,468] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-01 15:50:10,468] DEBUG [Controller id=2] Live brokers: 1 (kafka.controller.KafkaController)
[2022-05-01 15:50:10,474] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),output-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),input-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-05-01 15:50:11,453] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:50:11,454] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:50:11,454] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:50:11,454] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-01 15:50:11,454] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2022-05-01 15:50:11,455] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:50:11,456] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:50:11,457] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,457] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,457] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,458] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,459] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,459] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,461] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-01 15:50:11,479] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-05-01 15:50:11,481] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-01 15:50:11,484] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-01 15:50:11,487] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-01 15:50:11,489] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-01 15:50:11,495] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 249) (kafka.controller.KafkaController)
[2022-05-01 15:50:11,515] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-01 15:50:11,554] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-01 15:50:11,561] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,562] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-01 15:50:11,562] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-01 15:50:11,563] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-01 15:50:11,563] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-01 15:50:11,570] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-01 15:50:11,571] INFO [Controller id=1] List of topics ineligible for deletion: output,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-01 15:50:11,571] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-01 15:50:11,572] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-01 15:50:11,574] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-01 15:50:11,589] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:50:11,591] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-01 15:50:11,601] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:50:11,633] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:50:11,733] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=input,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=output,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:50:11,734] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:50:11,740] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:50:11,810] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:50:11,811] INFO [Controller id=1] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-05-01 15:50:11,820] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-01 15:50:11,820] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-01 15:50:11,821] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-01 15:50:11,821] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-01 15:50:11,823] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-01 15:50:11,831] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-01 15:50:12,997] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-01 15:50:12,998] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-01 15:50:12,999] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2022-05-01 15:50:13,006] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),output-0 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),input-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-05-01 15:50:14,089] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:50:14,089] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:50:14,089] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 15:50:14,090] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-01 15:50:14,091] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-01 15:50:14,093] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 15:50:14,095] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 15:50:14,096] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-01 15:50:14,096] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-01 15:50:14,096] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-01 15:50:14,098] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)

[2022-05-30 16:00:21,347] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:00:21,351] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:00:21,352] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:00:21,352] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:00:21,352] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:00:21,352] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:05:21,353] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:05:21,353] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:05:21,354] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:05:21,354] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:05:21,354] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:05:21,354] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:10:21,355] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:10:21,355] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:10:21,356] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:10:21,357] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:10:21,357] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:10:21,357] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:15:21,358] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:15:21,358] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:15:21,359] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:15:21,360] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:15:21,360] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:15:21,360] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:20:21,360] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:20:21,361] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:20:21,361] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:20:21,361] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:20:21,361] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:20:21,361] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:25:21,362] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:25:21,362] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:25:21,363] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:25:21,363] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:25:21,364] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:25:21,364] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:30:21,364] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:30:21,364] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:30:21,365] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:30:21,365] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:30:21,365] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:30:21,365] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:35:21,365] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:35:21,365] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:35:21,366] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:35:21,366] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:35:21,366] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:35:21,366] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:40:21,367] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:40:21,367] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:40:21,368] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:40:21,368] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:40:21,368] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:40:21,368] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:45:21,369] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:45:21,369] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:45:21,370] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:45:21,370] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:45:21,370] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:45:21,370] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:50:21,370] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:50:21,370] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:50:21,371] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:50:21,371] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:50:21,371] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:50:21,371] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:53:54,198] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-30 16:54:46,859] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 16:54:46,961] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2022-05-30 16:54:46,969] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-30 16:54:46,998] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-30 16:54:47,008] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-30 16:54:47,021] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-30 16:54:47,069] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 757) (kafka.controller.KafkaController)
[2022-05-30 16:54:47,129] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-30 16:54:47,301] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-30 16:54:47,370] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-30 16:54:47,375] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-30 16:54:47,376] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-30 16:54:47,377] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-30 16:54:47,378] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-30 16:54:47,397] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-30 16:54:47,397] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-30 16:54:47,398] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-30 16:54:47,399] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-30 16:54:47,401] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-30 16:54:47,436] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 16:54:47,442] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:54:47,468] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:54:47,590] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:54:47,816] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=output,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=input,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:54:47,816] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 16:54:47,839] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 16:54:48,070] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, output-0 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, input-0 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 16:54:48,071] INFO [Controller id=1] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2022-05-30 16:54:48,104] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 16:54:48,105] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 16:54:48,105] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-30 16:54:48,106] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-30 16:54:48,107] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-30 16:54:48,134] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-30 16:54:49,657] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-30 16:54:49,657] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-30 16:54:49,670] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-30 16:54:49,675] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-30 16:54:49,684] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 16:54:49,777] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 16:54:49,790] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-30 16:54:49,795] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 757, 2 -> 785) (kafka.controller.KafkaController)
[2022-05-30 16:54:49,824] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-30 16:54:53,136] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:54:53,137] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:54:53,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:54:53,151] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:54:53,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:54:53,151] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 16:59:32,158] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2022-05-30 16:59:32,166] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-30 16:59:32,172] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-30 16:59:32,179] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-30 16:59:32,183] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-30 16:59:32,204] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 785) (kafka.controller.KafkaController)
[2022-05-30 16:59:32,241] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-30 16:59:32,323] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-30 16:59:32,345] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-30 16:59:32,349] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2022-05-30 16:59:32,350] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-30 16:59:32,351] INFO [Controller id=2] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-30 16:59:32,351] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-30 16:59:32,361] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-30 16:59:32,361] INFO [Controller id=2] List of topics ineligible for deletion: output,input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-30 16:59:32,361] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-30 16:59:32,362] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-30 16:59:32,364] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-30 16:59:32,381] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:59:32,406] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:59:32,410] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 16:59:32,463] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:59:32,681] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=output,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=input,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 16:59:32,682] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 16:59:32,694] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 16:59:32,803] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 16:59:32,804] INFO [Controller id=2] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2022-05-30 16:59:32,813] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 16:59:32,814] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 16:59:32,814] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-30 16:59:32,815] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-30 16:59:32,817] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-30 16:59:32,832] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-30 16:59:37,833] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 16:59:37,834] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 16:59:37,840] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-21 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-35 -> List(1), output-0 -> List(1), __consumer_offsets-47 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-33 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), input-0 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-5 -> List(1)) (kafka.controller.KafkaController)
[2022-05-30 16:59:37,842] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-30 16:59:37,845] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-30 16:59:37,846] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 16:59:37,846] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)

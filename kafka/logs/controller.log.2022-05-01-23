[2022-05-02 00:03:04,101] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 00:03:04,102] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:03:04,106] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:03:04,106] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:03:04,106] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:03:04,106] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:08:04,107] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 00:08:04,107] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:08:04,110] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:08:04,110] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:08:04,110] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:08:04,110] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:13:04,111] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 00:13:04,111] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:13:04,115] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:13:04,115] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:13:04,115] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:13:04,116] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:18:04,116] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 00:18:04,116] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:18:04,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:18:04,120] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:18:04,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:18:04,120] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:23:04,121] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 00:23:04,121] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 00:23:04,124] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:23:04,124] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:23:04,124] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 00:23:04,124] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 00:24:22,376] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-02 00:24:22,377] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-02 00:24:22,377] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2022-05-02 00:24:22,382] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),output-0 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),input-0 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7) (kafka.controller.KafkaController)
[2022-05-02 00:24:23,599] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2022-05-02 00:24:23,600] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-02 00:24:23,601] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-02 00:24:23,601] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-02 00:24:23,608] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-05-02 00:24:23,609] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-02 00:24:23,686] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-02 00:24:23,688] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 626) (kafka.controller.KafkaController)
[2022-05-02 00:24:23,691] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-02 00:24:23,946] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-02 00:24:23,946] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-02 00:24:23,946] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2022-05-02 00:24:23,947] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),output-0 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),input-0 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:7) (kafka.controller.KafkaController)
[2022-05-02 00:24:24,972] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-02 00:24:24,973] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-02 00:24:24,973] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-02 00:24:24,974] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-02 00:24:24,974] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-02 00:24:24,975] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-02 00:24:24,976] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-02 00:24:24,976] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-02 00:24:24,976] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-02 00:24:24,976] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-02 00:24:24,978] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)

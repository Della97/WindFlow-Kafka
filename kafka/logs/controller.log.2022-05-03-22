[2022-05-03 22:21:12,534] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-03 22:21:34,566] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 22:21:34,628] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2022-05-03 22:21:34,632] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-03 22:21:34,649] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-03 22:21:34,659] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-03 22:21:34,665] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-03 22:21:34,707] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 374) (kafka.controller.KafkaController)
[2022-05-03 22:21:34,741] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-03 22:21:34,904] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-03 22:21:34,921] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-03 22:21:34,922] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-03 22:21:34,923] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-03 22:21:34,923] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-03 22:21:34,924] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-03 22:21:34,955] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-03 22:21:34,956] INFO [Controller id=1] List of topics ineligible for deletion: input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-03 22:21:34,957] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-03 22:21:34,958] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-03 22:21:34,963] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-03 22:21:35,014] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 22:21:35,017] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 22:21:35,077] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 22:21:35,217] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 22:21:35,448] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=input,Partition=0,Replica=2] -> OfflineReplica, [Topic=output,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 22:21:35,449] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 22:21:35,475] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 22:21:35,766] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 22:21:35,773] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2022-05-03 22:21:35,799] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-03 22:21:35,800] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-03 22:21:35,800] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-03 22:21:35,801] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-03 22:21:35,807] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-03 22:21:35,832] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-03 22:21:36,527] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-03 22:21:36,527] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-03 22:21:36,592] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-03 22:21:36,595] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-03 22:21:36,643] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 22:21:36,647] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 22:21:36,732] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-03 22:21:36,854] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-03 22:21:36,863] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 374, 2 -> 403) (kafka.controller.KafkaController)
[2022-05-03 22:21:40,833] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:21:40,835] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:21:40,852] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:21:40,858] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:21:40,859] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:21:40,859] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:26:40,860] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:26:40,860] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:26:40,866] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:26:40,866] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:26:40,867] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:26:40,867] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:31:40,867] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:31:40,868] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:31:40,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:31:40,869] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:31:40,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:31:40,870] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:36:40,870] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:36:40,870] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:36:40,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:36:40,872] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:36:40,872] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:36:40,872] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:41:40,873] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:41:40,873] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:41:40,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:41:40,879] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:41:40,880] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:41:40,880] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:46:11,842] INFO [Controller id=1] New topics: [Set(provatop)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(provatop,Some(JXWOU6k2Qm2LXEVNttyl0g),Map(provatop-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-03 22:46:11,844] INFO [Controller id=1] New partition creation callback for provatop-0 (kafka.controller.KafkaController)
[2022-05-03 22:46:11,863] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 22:46:11,863] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 22:46:40,880] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:46:40,880] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:46:40,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:46:40,882] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:46:40,883] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:46:40,883] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:51:40,883] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:51:40,884] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:51:40,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:51:40,886] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:51:40,886] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:51:40,886] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:56:40,887] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 22:56:40,887] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 22:56:40,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:56:40,890] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 22:56:40,890] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 22:56:40,891] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)

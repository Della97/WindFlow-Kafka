[2022-05-03 23:01:40,891] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:01:40,894] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:01:40,895] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:01:40,895] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:01:40,895] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:01:40,895] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:06:40,895] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:06:40,895] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:06:40,897] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:06:40,897] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:06:40,897] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:06:40,897] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:11:40,897] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:11:40,898] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:11:40,898] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:11:40,899] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:11:40,899] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:11:40,899] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:16:40,901] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:16:40,901] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:16:40,902] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:16:40,902] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:16:40,902] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:16:40,902] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:21:40,903] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:21:40,903] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:21:40,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:21:40,903] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:21:40,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:21:40,904] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:24:06,419] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-03 23:24:50,587] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:24:50,704] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2022-05-03 23:24:50,719] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-03 23:24:50,748] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-03 23:24:50,773] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-03 23:24:50,791] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-03 23:24:50,860] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 453) (kafka.controller.KafkaController)
[2022-05-03 23:24:50,914] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-03 23:24:51,060] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-03 23:24:51,086] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2022-05-03 23:24:51,087] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-03 23:24:51,088] INFO [Controller id=2] Current list of topics in the cluster: HashSet(output, input, provatop, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-03 23:24:51,088] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-03 23:24:51,092] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-03 23:24:51,112] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-03 23:24:51,115] INFO [Controller id=2] List of topics ineligible for deletion: output,provatop,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-03 23:24:51,115] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-03 23:24:51,116] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, provatop, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-03 23:24:51,119] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-03 23:24:51,162] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:24:51,179] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:24:51,202] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 23:24:51,273] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:24:51,534] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=input,Partition=0,Replica=2] -> OnlineReplica, [Topic=output,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=provatop,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:24:51,535] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:24:51,565] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:24:51,831] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, provatop-0 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, input-0 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:24:51,832] INFO [Controller id=2] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2022-05-03 23:24:51,849] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-03 23:24:51,849] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-03 23:24:51,850] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-03 23:24:51,850] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-03 23:24:51,862] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-03 23:24:51,875] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-03 23:24:53,087] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-03 23:24:53,089] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-03 23:24:53,104] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-03 23:24:53,106] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-03 23:24:53,113] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 23:24:53,199] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:24:53,212] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-03 23:24:53,222] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 498, 2 -> 453) (kafka.controller.KafkaController)
[2022-05-03 23:24:53,232] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-03 23:24:56,884] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:24:56,884] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:24:56,898] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:24:56,902] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:24:56,903] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:24:56,903] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:29:56,904] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:29:56,904] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:29:56,910] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:29:56,910] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:29:56,911] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:29:56,911] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:34:56,911] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:34:56,912] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:34:56,916] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:34:56,916] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:34:56,916] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:34:56,917] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:39:56,918] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:39:56,918] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:39:56,923] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:39:56,923] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:39:56,923] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:39:56,924] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:44:56,924] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:44:56,924] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:44:56,928] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:44:56,928] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:44:56,929] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:44:56,929] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:49:56,930] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:49:56,930] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:49:56,934] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:49:56,934] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:49:56,934] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:49:56,934] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:54:56,935] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:54:56,935] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:54:56,937] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:54:56,937] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:54:56,938] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:54:56,938] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:59:01,416] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-03 23:59:01,416] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-03 23:59:01,417] DEBUG [Controller id=2] Live brokers: 1 (kafka.controller.KafkaController)
[2022-05-03 23:59:01,424] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),output-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),provatop-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),input-0 -> (Leader:2,ISR:2,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6) (kafka.controller.KafkaController)
[2022-05-03 23:59:02,468] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:59:02,468] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:59:02,468] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:59:02,469] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-03 23:59:02,470] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2022-05-03 23:59:02,473] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:59:02,474] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:59:02,475] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,475] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,475] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,476] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,477] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,477] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,478] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-03 23:59:02,501] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2022-05-03 23:59:02,505] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-03 23:59:02,508] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-03 23:59:02,512] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-03 23:59:02,515] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-03 23:59:02,529] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 498) (kafka.controller.KafkaController)
[2022-05-03 23:59:02,551] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-03 23:59:02,589] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-03 23:59:02,597] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,599] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-03 23:59:02,600] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-03 23:59:02,600] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, provatop, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-03 23:59:02,601] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-03 23:59:02,607] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-03 23:59:02,608] INFO [Controller id=1] List of topics ineligible for deletion: input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-03 23:59:02,608] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-03 23:59:02,609] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-03 23:59:02,610] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-03 23:59:02,623] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-03 23:59:02,626] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:59:02,633] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:59:02,663] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:59:02,744] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=input,Partition=0,Replica=2] -> OfflineReplica, [Topic=output,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=provatop,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:59:02,744] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:59:02,749] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:59:02,810] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, provatop-0 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:59:02,810] INFO [Controller id=1] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2022-05-03 23:59:02,815] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-03 23:59:02,815] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-03 23:59:02,816] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-03 23:59:02,816] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-03 23:59:02,817] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-03 23:59:02,824] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-03 23:59:07,297] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-03 23:59:07,297] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-03 23:59:07,298] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2022-05-03 23:59:07,303] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),output-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),provatop-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),input-0 -> (Leader:-1,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:7),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:7),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6) (kafka.controller.KafkaController)
[2022-05-03 23:59:07,825] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-03 23:59:07,825] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-03 23:59:07,837] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-03 23:59:07,841] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-03 23:59:07,842] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-21 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-3 -> List(2), __consumer_offsets-37 -> List(2), __consumer_offsets-15 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-39 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-27 -> List(2), __consumer_offsets-7 -> List(2), __consumer_offsets-9 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-33 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), input-0 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-11 -> List(2), __consumer_offsets-45 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-5 -> List(2)) (kafka.controller.KafkaController)
[2022-05-03 23:59:07,842] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-03 23:59:07,849] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-03 23:59:08,291] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:59:08,292] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:59:08,292] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-03 23:59:08,292] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-03 23:59:08,293] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-03 23:59:08,294] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-03 23:59:08,294] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-03 23:59:08,295] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-03 23:59:08,295] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-03 23:59:08,295] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-03 23:59:08,297] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)

[2022-05-02 11:03:36,784] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 11:03:36,786] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:03:36,788] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-02 11:03:36,788] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:03:36,789] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 11:03:36,789] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:07:55,125] INFO [Controller id=2] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2022-05-02 11:07:55,126] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-02 11:07:55,127] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-02 11:07:55,130] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-02 11:07:55,146] INFO [Controller id=2] Broker failure callback for 1 (kafka.controller.KafkaController)
[2022-05-02 11:07:55,211] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-05-02 11:07:55,212] INFO [Controller id=2] Updated broker epochs cache: HashMap(2 -> 950) (kafka.controller.KafkaController)
[2022-05-02 11:07:55,230] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-02 11:08:36,789] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-02 11:08:36,790] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-02 11:08:36,791] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-30 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-24 -> List(1), __consumer_offsets-38 -> List(1), __consumer_offsets-48 -> List(1), __consumer_offsets-12 -> List(1), __consumer_offsets-26 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), input-0 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-32 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2022-05-02 11:08:36,792] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-02 11:08:36,794] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-02 11:08:36,794] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-02 11:08:36,794] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-02 11:09:00,925] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-02 11:09:00,926] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-02 11:09:00,927] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2022-05-02 11:09:00,933] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-46 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-42 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-30 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-34 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-16 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-12 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-24 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-0 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-4 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-48 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),output-0 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-28 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-40 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-36 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-10 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-22 -> (Leader:-1,ISR:1,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:9),__consumer_offsets-18 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),input-0 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-6 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:9) (kafka.controller.KafkaController)
[2022-05-02 11:09:01,471] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-02 11:09:01,472] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-02 11:09:01,472] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-02 11:09:01,473] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-02 11:09:01,473] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-02 11:09:01,474] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-02 11:09:01,475] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-02 11:09:01,476] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-02 11:09:01,476] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-02 11:09:01,476] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-02 11:09:01,479] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)

[2022-05-30 12:06:33,457] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-30 12:06:45,060] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:06:45,097] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-05-30 12:06:45,101] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-30 12:06:45,111] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-30 12:06:45,117] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-30 12:06:45,124] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-30 12:06:45,146] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 346) (kafka.controller.KafkaController)
[2022-05-30 12:06:45,190] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-30 12:06:45,296] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-30 12:06:45,306] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-30 12:06:45,308] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-30 12:06:45,309] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-30 12:06:45,309] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-30 12:06:45,309] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-30 12:06:45,319] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-30 12:06:45,320] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-30 12:06:45,320] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-30 12:06:45,321] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-30 12:06:45,323] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-30 12:06:45,352] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:06:45,364] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:06:45,367] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 12:06:45,468] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:06:45,618] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=output,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=input,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:06:45,619] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:06:45,626] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:06:45,798] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, output-0 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, input-0 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:06:45,798] INFO [Controller id=1] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-05-30 12:06:45,804] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 12:06:45,805] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 12:06:45,806] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-30 12:06:45,806] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-30 12:06:45,808] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-30 12:06:45,819] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-30 12:06:50,822] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:06:50,823] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:06:50,833] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:06:50,839] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:06:50,843] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-24 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2022-05-30 12:06:50,843] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-05-30 12:06:50,850] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-30 12:06:52,389] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-30 12:06:52,394] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-30 12:06:52,407] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-30 12:06:52,416] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-30 12:06:52,417] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 12:06:52,564] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-30 12:06:52,567] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 346, 2 -> 416) (kafka.controller.KafkaController)
[2022-05-30 12:06:52,574] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:06:52,601] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-30 12:11:50,852] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:11:50,855] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:11:50,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:11:50,865] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:11:50,866] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:11:50,866] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:16:50,866] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:16:50,869] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:16:50,870] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:16:50,870] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:16:50,870] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:16:50,870] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:21:50,871] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:21:50,871] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:21:50,877] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:21:50,877] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:21:50,877] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:21:50,877] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:26:50,878] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:26:50,878] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:26:50,881] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:26:50,881] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:26:50,882] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:26:50,882] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:31:55,976] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-05-30 12:31:56,001] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-05-30 12:31:56,014] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-30 12:31:56,064] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-30 12:31:56,079] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-05-30 12:31:56,102] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 416) (kafka.controller.KafkaController)
[2022-05-30 12:31:56,160] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-30 12:31:56,412] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-30 12:31:56,500] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2022-05-30 12:31:56,501] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-30 12:31:56,502] INFO [Controller id=2] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-30 12:31:56,503] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-30 12:31:56,506] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-05-30 12:31:56,564] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-30 12:31:56,564] INFO [Controller id=2] List of topics ineligible for deletion: output,input,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-30 12:31:56,565] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-30 12:31:56,569] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, input, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-30 12:31:56,579] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-30 12:31:56,647] INFO [RequestSendThread controllerId=2] Controller 2 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 12:31:56,648] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:31:56,672] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:31:56,775] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:31:56,927] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=output,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=input,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:31:56,928] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:31:56,938] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:31:57,041] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:31:57,041] INFO [Controller id=2] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-05-30 12:31:57,054] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 12:31:57,054] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 12:31:57,055] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-30 12:31:57,055] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-30 12:31:57,057] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-30 12:31:57,080] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-30 12:32:02,086] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:32:02,087] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:32:02,094] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-21 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-35 -> List(1), output-0 -> List(1), __consumer_offsets-47 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-33 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), input-0 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-5 -> List(1)) (kafka.controller.KafkaController)
[2022-05-30 12:32:02,096] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-30 12:32:02,101] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-30 12:32:02,101] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:32:02,101] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:37:02,102] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:37:02,102] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:37:02,107] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-21 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-35 -> List(1), output-0 -> List(1), __consumer_offsets-47 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-13 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-33 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), input-0 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-5 -> List(1)) (kafka.controller.KafkaController)
[2022-05-30 12:37:02,117] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2022-05-30 12:37:02,118] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2022-05-30 12:37:02,118] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:37:02,118] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:40:33,831] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-30 12:40:33,832] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-30 12:40:33,833] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2022-05-30 12:40:33,841] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),output-0 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),input-0 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:3) (kafka.controller.KafkaController)
[2022-05-30 12:40:35,176] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:40:35,177] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:40:35,177] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:40:35,179] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-30 12:40:35,180] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2022-05-30 12:40:35,182] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:40:35,185] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:40:35,186] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-05-30 12:40:35,186] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-30 12:40:35,186] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-05-30 12:40:35,189] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-30 12:40:50,510] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-30 12:41:10,965] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:41:11,040] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2022-05-30 12:41:11,046] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-30 12:41:11,061] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-30 12:41:11,076] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-30 12:41:11,098] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-30 12:41:11,114] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 519) (kafka.controller.KafkaController)
[2022-05-30 12:41:11,172] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-30 12:41:11,293] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-30 12:41:11,322] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-30 12:41:11,326] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-30 12:41:11,327] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-30 12:41:11,327] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-30 12:41:11,328] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-30 12:41:11,342] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-30 12:41:11,343] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2022-05-30 12:41:11,343] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-30 12:41:11,344] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-30 12:41:11,356] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-30 12:41:11,410] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 12:41:11,416] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:41:11,453] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:41:11,559] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:41:11,739] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=output,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=input,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-30 12:41:11,739] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:41:11,759] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:41:11,872] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-30 12:41:11,932] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-30 12:41:12,113] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, output-0 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, input-0 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-30 12:41:12,113] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2022-05-30 12:41:12,126] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 12:41:12,127] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-30 12:41:12,128] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-30 12:41:12,138] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-30 12:41:12,139] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-30 12:41:12,154] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-30 12:41:12,172] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-30 12:41:12,173] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-30 12:41:12,181] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-30 12:41:12,187] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-30 12:41:12,215] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-30 12:41:12,339] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-30 12:41:12,342] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 519, 2 -> 547) (kafka.controller.KafkaController)
[2022-05-30 12:41:17,156] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:41:17,157] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:41:17,174] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:41:17,180] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:41:17,181] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:41:17,181] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:46:17,181] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:46:17,184] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:46:17,185] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:46:17,185] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:46:17,185] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:46:17,185] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:51:17,186] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-30 12:51:17,188] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-30 12:51:17,192] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:51:17,192] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-30 12:51:17,192] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-30 12:51:17,192] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)

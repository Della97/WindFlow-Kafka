[2022-05-30 16:54:50,083] INFO [Broker id=2] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 0 (state.change.logger)
[2022-05-30 16:54:50,114] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 25 partitions (state.change.logger)
[2022-05-30 16:54:50,209] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-18 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,330] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-22 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,345] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-10 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,373] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-44 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,385] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-14 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,397] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-48 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,414] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-34 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,429] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-4 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,439] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-38 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,448] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-8 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,459] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-26 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,472] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-30 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,484] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,500] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-20 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,515] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-24 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,530] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-42 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,549] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-12 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,565] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-46 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,576] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-16 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,587] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,596] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-36 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,607] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-6 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,618] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-40 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,633] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-28 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,646] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-32 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2022-05-30 16:54:50,663] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 7 with correlation id 1 for 0 partitions (state.change.logger)
[2022-05-30 16:54:50,685] INFO [Broker id=2] Finished LeaderAndIsr request in 573ms correlationId 1 from controller 1 for 25 partitions (state.change.logger)
[2022-05-30 16:54:50,699] INFO [Broker id=2] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 2 (state.change.logger)
[2022-05-30 16:54:50,703] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 25 partitions (state.change.logger)
[2022-05-30 16:54:50,711] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 7 as part of the become-leader transition for 25 partitions (state.change.logger)
[2022-05-30 16:54:50,726] INFO [Broker id=2] Leader __consumer_offsets-18 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,738] INFO [Broker id=2] Leader __consumer_offsets-22 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,739] INFO [Broker id=2] Leader __consumer_offsets-10 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,740] INFO [Broker id=2] Leader __consumer_offsets-44 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,741] INFO [Broker id=2] Leader __consumer_offsets-14 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,742] INFO [Broker id=2] Leader __consumer_offsets-48 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,744] INFO [Broker id=2] Leader __consumer_offsets-34 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,746] INFO [Broker id=2] Leader __consumer_offsets-4 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,747] INFO [Broker id=2] Leader __consumer_offsets-38 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,749] INFO [Broker id=2] Leader __consumer_offsets-8 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,750] INFO [Broker id=2] Leader __consumer_offsets-26 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,752] INFO [Broker id=2] Leader __consumer_offsets-30 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,753] INFO [Broker id=2] Leader __consumer_offsets-0 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,754] INFO [Broker id=2] Leader __consumer_offsets-20 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,756] INFO [Broker id=2] Leader __consumer_offsets-24 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,757] INFO [Broker id=2] Leader __consumer_offsets-42 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,758] INFO [Broker id=2] Leader __consumer_offsets-12 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,761] INFO [Broker id=2] Leader __consumer_offsets-46 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,762] INFO [Broker id=2] Leader __consumer_offsets-16 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,764] INFO [Broker id=2] Leader __consumer_offsets-2 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,764] INFO [Broker id=2] Leader __consumer_offsets-36 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,765] INFO [Broker id=2] Leader __consumer_offsets-6 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,767] INFO [Broker id=2] Leader __consumer_offsets-40 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,768] INFO [Broker id=2] Leader __consumer_offsets-28 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,770] INFO [Broker id=2] Leader __consumer_offsets-32 starts at leader epoch 8 from offset 0 with high watermark 0 ISR [2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-05-30 16:54:50,800] INFO [Broker id=2] Finished LeaderAndIsr request in 97ms correlationId 3 from controller 1 for 25 partitions (state.change.logger)
[2022-05-30 16:54:50,810] INFO [Broker id=2] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 4 (state.change.logger)
[2022-05-30 16:59:32,368] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2022-05-30 16:59:32,451] INFO [Controller id=2 epoch=8] Sending LeaderAndIsr request to broker 2 with 25 become-leader and 0 become-follower partitions (state.change.logger)
[2022-05-30 16:59:32,459] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 25 partitions (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 25 partitions (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-48 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-46 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-44 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-42 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-32 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,463] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-30 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-28 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-26 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-40 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-38 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-36 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-34 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-16 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-14 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-12 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-10 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-24 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,464] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-22 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-20 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-18 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-0 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-8 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-6 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-4 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,465] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 8 for partition __consumer_offsets-2 since its associated leader epoch 8 matches the current leader epoch (state.change.logger)
[2022-05-30 16:59:32,470] INFO [Broker id=2] Finished LeaderAndIsr request in 11ms correlationId 1 from controller 2 for 25 partitions (state.change.logger)
[2022-05-30 16:59:32,484] INFO [Broker id=2] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 2 (state.change.logger)
[2022-05-30 16:59:32,669] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,670] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,670] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,670] INFO [Controller id=2 epoch=8] Partition output-0 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,670] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,670] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,671] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,671] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,671] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,671] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,671] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,671] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,672] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,672] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,672] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,672] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition input-0 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,673] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,674] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,674] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,674] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,674] INFO [Controller id=2 epoch=8] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:1,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2022-05-30 16:59:32,678] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet(2) for 27 partitions (state.change.logger)
[2022-05-30 16:59:32,684] INFO [Broker id=2] Add 27 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 8 with correlation id 3 (state.change.logger)
[2022-05-30 16:59:32,771] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,780] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,781] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,781] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition output-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition output-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,782] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,783] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,785] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,786] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,787] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,788] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,788] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,789] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,790] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,791] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,791] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,792] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,793] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,794] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,795] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,796] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,796] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,797] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition input-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition input-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,797] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,798] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,799] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,799] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,800] ERROR [Controller id=2 epoch=8] Controller 2 epoch 8 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:424)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:919)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:421)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:332)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:238)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:158)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:74)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:59)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:42)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:266)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1527)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2452)
	at kafka.controller.KafkaController.process(KafkaController.scala:2497)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:52)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:130)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:133)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:133)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-05-30 16:59:32,802] INFO [Controller id=2 epoch=8] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)

[2022-05-01 17:25:57,831] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@532760d8, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-01 17:26:20,941] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:26:21,002] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2022-05-01 17:26:21,019] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-05-01 17:26:21,035] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-01 17:26:21,041] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-01 17:26:21,050] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-05-01 17:26:21,090] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 327) (kafka.controller.KafkaController)
[2022-05-01 17:26:21,117] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-01 17:26:21,307] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-01 17:26:21,323] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-05-01 17:26:21,324] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-05-01 17:26:21,325] INFO [Controller id=1] Current list of topics in the cluster: HashSet(output, input, __consumer_offsets) (kafka.controller.KafkaController)
[2022-05-01 17:26:21,325] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-01 17:26:21,326] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-01 17:26:21,342] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-01 17:26:21,343] INFO [Controller id=1] List of topics ineligible for deletion: output,__consumer_offsets (kafka.controller.KafkaController)
[2022-05-01 17:26:21,354] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-01 17:26:21,354] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(output, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2022-05-01 17:26:21,356] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-01 17:26:21,396] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 17:26:21,400] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-01 17:26:21,416] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 17:26:21,752] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 17:26:22,176] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=input,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=output,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 17:26:22,176] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 17:26:22,194] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 17:26:22,445] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, output-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, input-0 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 17:26:22,446] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2022-05-01 17:26:22,507] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-01 17:26:22,508] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-01 17:26:22,508] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-01 17:26:22,509] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-01 17:26:22,522] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-01 17:26:22,543] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-01 17:26:24,177] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-05-01 17:26:24,178] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-01 17:26:24,184] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-05-01 17:26:24,187] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-05-01 17:26:24,200] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-01 17:26:24,381] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:26:24,398] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-01 17:26:24,402] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 327, 2 -> 371) (kafka.controller.KafkaController)
[2022-05-01 17:26:24,432] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-01 17:26:27,545] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 17:26:27,546] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:26:27,559] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:26:27,564] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:26:27,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:26:27,564] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:31:27,565] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 17:31:27,565] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:31:27,569] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:31:27,569] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:31:27,569] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:31:27,569] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:36:27,570] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 17:36:27,570] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:36:27,572] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:36:27,573] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:36:27,573] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:36:27,573] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:41:27,573] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-01 17:41:27,573] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-01 17:41:27,575] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:41:27,576] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:41:27,576] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-05-01 17:41:27,576] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-01 17:42:58,997] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-05-01 17:42:58,997] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-05-01 17:42:58,998] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2022-05-01 17:42:59,005] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),output-0 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),input-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-05-01 17:43:00,064] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:43:00,064] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:43:00,064] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:43:00,065] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-05-01 17:43:00,065] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2022-05-01 17:43:00,066] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 17:43:00,068] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 17:43:00,070] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-05-01 17:43:00,081] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2022-05-01 17:43:00,081] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-01 17:43:00,082] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-01 17:43:00,082] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-01 17:43:00,091] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-05-01 17:43:00,093] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-05-01 17:43:00,190] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-05-01 17:43:00,191] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 327) (kafka.controller.KafkaController)
[2022-05-01 17:43:00,197] INFO [RequestSendThread controllerId=1] Controller 1 connected to fedora:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-01 17:43:00,952] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-05-01 17:43:00,952] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-05-01 17:43:00,952] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2022-05-01 17:43:00,953] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),output-0 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),input-0 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:-1,ISR:2,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-05-01 17:43:01,752] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:43:01,753] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:43:01,753] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-01 17:43:01,754] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-05-01 17:43:01,754] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-05-01 17:43:01,755] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-05-01 17:43:01,757] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-05-01 17:43:01,758] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-05-01 17:43:01,758] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-05-01 17:43:01,758] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-05-01 17:43:01,760] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
